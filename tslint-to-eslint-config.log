10 ESLint rules behave differently from their TSLint counterparts:
  * @typescript-eslint/ban-ts-comment:
    - The typescript-eslint now bans @ts-<directive> comments from being used
  * @typescript-eslint/no-unused-vars:
    - Please read the following article as the rule behaviour may change on the short term: https://github.com/typescript-eslint/typescript-eslint/issues/1856
  * @typescript-eslint/no-unused-expressions:
    - The TSLint optional config "allow-new" is the default ESLint behavior and will no longer be ignored.
  * arrow-body-style:
    - ESLint will throw an error if the function body is multiline yet has a one-line return on it.
  * @typescript-eslint/naming-convention:
    - typescript-eslint does not enforce uppercase for const only.
  * no-plusplus:
    - ++ and -- operators will now only be allowed in for loops.
  * one-var:
    - Variables declared in for loops will no longer be checked.
  * no-underscore-dangle:
    - Leading or trailing underscores (_) on identifiers will now be forbidden.
  * no-trailing-spaces:
    - ESLint does not support ignoring template strings.
  * @typescript-eslint/quotes:
    - Option "avoid-template" is not supported by ESLint.

27 rules are not known by tslint-to-eslint-config to have ESLint equivalents:
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ban".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "comment-type".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "encoding".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "import-spacing".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "invalid-void".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-default-import".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-dynamic-delete".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-inferred-empty-object-type".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-mergeable-namespace".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-promise-as-boolean".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-tautology-expression".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-unnecessary-callback-wrapper".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-unsafe-any".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "number-literal-format".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "object-literal-sort-keys".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "prefer-conditional-expression".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "prefer-method-signature".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "prefer-while".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "return-undefined".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "static-this".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "strict-comparisons".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "strict-string-expressions".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "strict-type-predicates".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "switch-final-break".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "typedef".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "unnecessary-else".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "whitespace".

